// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPIPrimary.api.DbContexts;

#nullable disable

namespace WebAPIPrimary.api.Migrations
{
    [DbContext(typeof(EscolaDbContext))]
    partial class EscolaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("AlunosCursos", b =>
                {
                    b.Property<int>("AlunosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunosId", "CursosId");

                    b.HasIndex("CursosId");

                    b.ToTable("AlunosCursos");

                    b.HasData(
                        new
                        {
                            AlunosId = 1,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 2,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 3,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 4,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 5,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 2,
                            CursosId = 2
                        },
                        new
                        {
                            AlunosId = 3,
                            CursosId = 2
                        },
                        new
                        {
                            AlunosId = 1,
                            CursosId = 3
                        },
                        new
                        {
                            AlunosId = 2,
                            CursosId = 3
                        },
                        new
                        {
                            AlunosId = 5,
                            CursosId = 4
                        },
                        new
                        {
                            AlunosId = 6,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 7,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 8,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 9,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 10,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 11,
                            CursosId = 2
                        },
                        new
                        {
                            AlunosId = 12,
                            CursosId = 2
                        },
                        new
                        {
                            AlunosId = 13,
                            CursosId = 3
                        },
                        new
                        {
                            AlunosId = 14,
                            CursosId = 3
                        },
                        new
                        {
                            AlunosId = 15,
                            CursosId = 4
                        },
                        new
                        {
                            AlunosId = 16,
                            CursosId = 4
                        },
                        new
                        {
                            AlunosId = 18,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 17,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 19,
                            CursosId = 1
                        },
                        new
                        {
                            AlunosId = 20,
                            CursosId = 1
                        });
                });

            modelBuilder.Entity("WebAPIPrimary.api.Entites.Alunos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Maicon"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Bruno"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Isadora"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Mateus"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Gleice"
                        });
                });

            modelBuilder.Entity("WebAPIPrimary.api.Entites.Cursos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Javascript"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "CSS"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "POO"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Angular"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Java"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Swift"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Spark"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Glue"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Git"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "EC2"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Terraform"
                        },
                        new
                        {
                            Id = 13,
                            Nome = "S3"
                        },
                        new
                        {
                            Id = 14,
                            Nome = "SQS"
                        },
                        new
                        {
                            Id = 15,
                            Nome = "API Gateway"
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Lambda"
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Python"
                        },
                        new
                        {
                            Id = 18,
                            Nome = "Metodologia Agil"
                        },
                        new
                        {
                            Id = 19,
                            Nome = "TDD"
                        },
                        new
                        {
                            Id = 20,
                            Nome = "Nodejs"
                        });
                });

            modelBuilder.Entity("AlunosCursos", b =>
                {
                    b.HasOne("WebAPIPrimary.api.Entites.Alunos", null)
                        .WithMany()
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPIPrimary.api.Entites.Cursos", null)
                        .WithMany()
                        .HasForeignKey("CursosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
